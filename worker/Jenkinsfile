pipeline {

  agent none

  stages{
      stage(build){

          agent{
              docker{
                 image 'maven:3.6.1-jdk-8-slim'
                 args '-v $HOME/.m2:/root/.m2'
              }
          }

          when {
            changeset "**/worker/**"
          }
          steps{
              echo 'compiling worker app'
              dir('worker'){
                sh 'mvn compile'
              }
          }
      }
      stage(test){
          when {
            changeset "**/worker/**"
          }

          agent{
              docker{
                 image 'maven:3.6.1-jdk-8-slim'
                 args '-v $HOME/.m2:/root/.m2'
              }
          }

          steps{
              echo 'testing worker app'
              dir('worker'){
                sh 'mvn clean test'
              }
          }
      }
      stage(package){
           when {
             branch "master"
             changeset "**/worker/**"
          }

          agent{
              docker{
                 image 'maven:3.6.1-jdk-8-slim'
                 args '-v $HOME/.m2:/root/.m2'
              }
          }

          steps{
              echo 'packaging worker app'
              dir('worker'){
                sh 'mvn package -DskipTests'
              }
          }
      }

      stage('docker-package'){
        agent any
        steps{
          echo 'Packaging worker app with docker'
          script{
            docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                def workerImage = docker.build("initcron/worker-aa:v${env.BUILD_ID}", "./worker")
                workerImage.push()
                workerImage.push("latest")
            }
          }
        }
    }

    stage('deploy to dev'){
            agent any
            steps{
              echo 'Deploy instavote app with docker compose'
              sh 'docker-compose up -d'
            }
        }

  }

  post{
    always{
        echo 'This pipeline is completed..'
    }
  }
}
